#-*- coding:utf-8 -*-
import random
import string
import re

class Geneator:
    def __init__(self):
        self.re = r'^[0-9]{2}(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|[3][01])[1-4][0-9]{6}$'
        self.foreign = r'^[0-9]{2}(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|[3][01])[5-8][0-9]{2}[5-8]{2}[0-9]{2}$'


    def geneator(self):
        """
        0~9 숫자범위 내에 주민번호 형식을 생성
        reference: https://hongku.tistory.com/297
        return: [0-9]{6}-[0-9]{7}
        """ 
        result = ""
        for idx in range(0, 13):
            result += random.choice(string.digits)
        
        return result

    def save(self, filename, lines=10000):
        """
        생성한 주민번호를 파일에 저장
        """
        with open(filename, 'w') as f:
            for idx in range(0, lines):
                result = self.geneator()
                f.write(result + '\n')

    def check(self, jumin):
        """
        주민번호 유효성 검사
        return 
        True: 올바른 주민번호
        False: 올바르지 않은 주민번호
        """
        keyNums = [2, 3, 4, 5, 6, 7, 8, 9, 2, 3, 4, 5]
        total = 0
 
        for item in range(len(keyNums)):
            r =  int(jumin[item]) * keyNums[item]
            total += r
 
        result = (11 - (total % 11)) % 10
        if result == int(jumin[12]):
            return True
        else:
            return False

    def check_foreign(self, jumin):
        """
        (todo)
        외국인 주민번호 유효성 검사
        return 
        True: 올바른 주민번호
        False: 올바르지 않은 주민번호
        """
        pass

    def extract(self, filename, case=1):
        """
        주민번호 추출
        """
        with open(filename, 'r') as f:
            line = f.readlines()
        
        # 주민번호
        if case == 1:
            _regex = re.compile(self.re)
            r = []

            # 정규식 검사
            for jumin in line:
                jumin = jumin.replace('\n', '')
                _t = _regex.search(jumin)

                if _t:
                    r.append(_t.group())

            return r
        # 외국인 주민번호
        elif case == 2:
            _regex = re.compile(self.foreign)
            r = []

            # 정규식 검사
            for jumin in line:
                jumin = jumin.replace('\n', '')
                _t = _regex.search(jumin)

                if _t:
                    r.append(_t.group())

            return r
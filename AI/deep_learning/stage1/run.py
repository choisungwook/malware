import jsonlines
import json
import numpy as np
import tqdm
from keras import models
from keras import layers
from keras import optimizers
import matplotlib.pyplot as plt

dataset_path = r'C:\Users\kgg19\Documents\dataset\ember\train_features_0.jsonl'
    
data = []
label = []

# histogram 데이터 가져오기 시작
with open(dataset_path) as reader:
    for obj in tqdm.tqdm(reader, total=50000):
        _dict = json.loads(obj)
        _historgram = _dict['histogram']
        _label = _dict['label']
        
        # 리스트 업데이트
        data.append(_historgram)
        label.append([_label])
        
print('histogram 데이터 가져오기 완료\n')

# 형변환
x_train = np.asarray(data).astype('float32')
y_train = np.asarray(label).astype('float32')
print('형변환 완료')


# 모델 설계
model = models.Sequential()
model.add(layers.Dense(16, activation='relu', input_shape=(256,)))
model.add(layers.Dense(8, activation='relu'))
model.add(layers.Dense(1, activation='sigmoid'))

# 손실함수 설정
model.compile(optimizer=optimizers.RMSprop(lr=0.001),
loss='binary_crossentropy',
metrics=['accuracy'])

# 훈련
history = model.fit(x_train,
                y_train,
                epochs=5,
                batch_size=128)


# 결과 출력
history_dict = history.history
loss = history_dict['loss']
epochs = range(1, len(loss) + 1)
plt.plot(epochs, loss, 'b', label='Training loss')
plt.legend()
plt.show()
print('done')
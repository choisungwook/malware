#-*- coding: utf-8 -*-
import unittest
import sys
import os
import pefile
import csv

sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))
from src import raw_features, extra_features, conf

class Textarea(unittest.TestCase):
    def setUp(self):
        '''
        테스트 시작되기 전 초기화 코드
        '''
        self.target = conf.testtarget
        self.pe = pefile.PE(self.target)

    def test_extract_dos_header(self):
        '''
        DOS헤더 추출 테스트
        '''
        dos_header = raw_features.extract_dos_header(self.pe)
        print(dos_header)

        # 추출 개수와 DOS헤더 개수 검사
        self.assertEqual(len(dos_header), len(conf.__IMAGE_DOS_HEADER_format__[1]))

    def test_extract_dosheader_And_write_csv(self):
        '''
        DOS헤더를 추출하고 csv파일로 쓰기
        '''
        # csv파일 경로
        output = 'dos_header.csv'
        dos_header = raw_features.extract_dos_header(self.pe)

        # 기존에 있던 csv파일 제거
        if os.path.exists(output):
            os.remove(output)

        with open(output, 'wt') as f:
            writer = csv.writer(f, lineterminator='\n')

            # 헤더 쓰기
            writer.writerow(list(conf.__IMAGE_DOS_HEADER_format__[1]))

            # 추출한 도스헤더 쓰기
            writer.writerow(dos_header.values())

        print('Test_extract_dosheader_And_write_csv function is Done')

    def test_extract_optional_header(self):
        '''
        OPTIONAL헤더 추출 테스트
        '''
        self.assertIsNotNone(raw_features.extract_optional_header(self.pe))
        print('optional_header Done')

    def test_extract_optional_header(self):
        '''
        OPTIONAL헤더 추출 테스트
        '''
        self.assertIsNotNone(raw_features.extract_file_header(self.pe))
        print('file_header Done')

    def test_extract_section_name(self):
        '''
        악성코드에 자주 출현하는 섹션 이름 추출
        '''
        sections = extra_features.get_count_suspicious_sections(self.pe)
        print(sections)


if __name__=='__main__':
    unittest.main()
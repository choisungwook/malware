# -*- coding: utf-8 -*-
import pefile
import lief
import logging

mylogger = logging.getLogger('extra_features')
mylogger.setLevel(logging.DEBUG)


def get_count_suspicious_sections(pe):
    '''
    악성코드에서 자주 출현하는 섹션의 유/무
    :param self:
    :param pe:
    :return:
    '''
    malicious_sections = {
        '.text': False,
        '.data': False,
        '.rdata': False,
        '.idata': False,
        '.rsrc': False,
        '.bss': False,
        '.crt': False,
        '.tls': False
    }

    try:
        for section in pe.sections:
            section_name = section.Name.decode('utf-8')
            section_name = section_name.split('\00')[0].lower()

            # 섹션 이름이 있으면 딕셔너리 값을 1로 수정
            if section_name in malicious_sections:
                malicious_sections[section_name] = True

        return malicious_sections

    except Exception as e:
        mylogger.debug('get_count_suspicious_section is failed')
        return None
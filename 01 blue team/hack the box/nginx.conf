worker_processes  2;
pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    include       mime.types;
    default_type  application/octet-stream;

    access_log  /var/log/access.log  main;
    access_log  /dev/null;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen       80;
        server_name  _;

        access_log  /var/log/access.log  main;

        more_clear_headers 'Server';
        add_header Server 'SuperWAF';

        modsecurity on;
        location /sync {
            default_type 'text/plain';

            modsecurity_rules '
                SecDefaultAction "phase:1,log,auditlog,deny,status:403"
                SecDefaultAction "phase:2,log,auditlog,deny,status:403"

                SecRule REQUEST_HEADERS:User-Agent "^(Mozilla|Opera)" "id:1,phase:2,t:trim,block"

                SecRuleEngine On
                SecRule ARGS "@rx [;\(\)\|\`\<\>\&\$\*]" "id:2,phase:2,t:trim,t:urlDecode,block"
                SecRule ARGS "@rx (user\.txt|root\.txt)" "id:3,phase:2,t:trim,t:urlDecode,block"
                SecRule ARGS "@rx (\/.+\s+.*\/)" "id:4,phase:2,t:trim,t:urlDecode,block"
                SecRule ARGS "@rx (\.\.)" "id:5,phase:2,t:trim,t:urlDecode,block"
                SecRule ARGS "@rx (\?s)" "id:6,phase:2,t:trim,t:urlDecode,block"
                SecRule ARGS "@rx (\\)" "id:6,phase:2,t:trim,t:urlDecode,block"

                SecRule ARGS:opt "@pmFromFile /usr/local/openresty/nginx/conf/unixcmd.txt" "id:99,phase:2,t:trim,t:urlDecode,block"
            ';

            content_by_lua_block {
                local opt = 'date'
                if ngx.var.arg_opt then
                        opt = ngx.var.arg_opt
                end

                -- ngx.say("DEBUG: CMD='/home/themiddle/checksync "..opt.."'; bash -c $CMD 2>&1")

                local handle = io.popen("CMD='/home/themiddle/checksync "..opt.."'; bash -c ${CMD} 2>&1")
                local result = handle:read("*a")
                handle:close()
                ngx.say(result)
            }

        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
}
